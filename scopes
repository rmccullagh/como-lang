func this() {
	return 0;
}

a = 1;

func b() {
	/* This DOES NOT inherit any out scopes - TODO */
	/* right now LOAD_NAME, either searches the current frame
		 or it searches the global frame - 
	   the global frame is where names are defined outside of a function
	*/
	a = 4;
	func this() {
		/* Since the function "this" does not inherit any other scope
			 except the global one, a will be 1 in this case, not 4
		   it would be nice if we can inherit the outer scope easily,
			 but it isn't that easy to do, beacuse we would need to have
			 a stack of scopes to search first, where the search would be
			 a last in first out search, (a linked list would be perfect) 
		
			 A simple fix would be to just not allow nested functions (like in c),
			 but it would still be nice to implement block scope
			 like for the body's of a for,while loops
		*/
		return a;
	}
	c = this;
	return c();
}

/* This should be 2 */
print(b());
